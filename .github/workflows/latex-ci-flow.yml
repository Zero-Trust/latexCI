name: LaTeX to PDF

on:
  push:
#    branches-ignore:
#      - '!master'
    tags: v*.*.*

jobs:
  build:
    name: Build-Upload
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Build LaTeX file
        uses: Zero-Trust/latexBuild@master
        with: 
          element_files: |
            main.tex
          compiler: latexmk
          args: '-cd -r ./.latexmkrc -f -gg'
        
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: main.pdf_${{ github.sha }}
          path: ./main.pdf
          
      - name: Get Tag Version
        run: |
          # Strip git ref prefix from version
          TAG_VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && TAG_VERSION=$(echo ${TAG_VERSION} | sed -e 's/^v//')
          
#   release:
#     name: Release
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: main.pdf_${{ github.sha }}
      
      - name: uncompress artifact
        run: |
          ls -lha
          unzip main.pdf_${{ github.sha }}
          rm -f main.pdf_${{ github.sha }}
        
#       - uses: actions/checkout@v2
        
#       - name: create test file
#         run: |
#           echo "world" > hello.pdf
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          # tag_name: ${{ TAG_VERSION }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./main.pdf
          asset_name: main.pdf
          asset_content_type: application/pdf
